/* File generated by the BNF Converter (bnfc 2.9.5). */

#ifndef PARSER_HEADER_FILE
#define PARSER_HEADER_FILE

#include <stdio.h>
#include "Absyn.h"

Programs  pPrograms(FILE *inp);
Programs psPrograms(const char *str);
Declaracoes  pDeclaracoes(FILE *inp);
Declaracoes psDeclaracoes(const char *str);
Declaracao  pDeclaracao(FILE *inp);
Declaracao psDeclaracao(const char *str);
StructDecl  pStructDecl(FILE *inp);
StructDecl psStructDecl(const char *str);
FieldDecl  pFieldDecl(FILE *inp);
FieldDecl psFieldDecl(const char *str);
PonteiraDecl  pPonteiraDecl(FILE *inp);
PonteiraDecl psPonteiraDecl(const char *str);
VetorDecl  pVetorDecl(FILE *inp);
VetorDecl psVetorDecl(const char *str);
Instrucoes  pInstrucoes(FILE *inp);
Instrucoes psInstrucoes(const char *str);
Instrucao  pInstrucao(FILE *inp);
Instrucao psInstrucao(const char *str);
Atribuicao  pAtribuicao(FILE *inp);
Atribuicao psAtribuicao(const char *str);
Comentario  pComentario(FILE *inp);
Comentario psComentario(const char *str);
DeclaracaoSe  pDeclaracaoSe(FILE *inp);
DeclaracaoSe psDeclaracaoSe(const char *str);
LoopPara  pLoopPara(FILE *inp);
LoopPara psLoopPara(const char *str);
Imprima  pImprima(FILE *inp);
Imprima psImprima(const char *str);
Entrada  pEntrada(FILE *inp);
Entrada psEntrada(const char *str);
Modularizacao  pModularizacao(FILE *inp);
Modularizacao psModularizacao(const char *str);
Expressao  pExpressao(FILE *inp);
Expressao psExpressao(const char *str);
Termo  pTermo(FILE *inp);
Termo psTermo(const char *str);
Condicao  pCondicao(FILE *inp);
Condicao psCondicao(const char *str);
Tipo  pTipo(FILE *inp);
Tipo psTipo(const char *str);
Identificador  pIdentificador(FILE *inp);
Identificador psIdentificador(const char *str);
Inteiro  pInteiro(FILE *inp);
Inteiro psInteiro(const char *str);
Real  pReal(FILE *inp);
Real psReal(const char *str);
Chax  pChax(FILE *inp);
Chax psChax(const char *str);
Texto  pTexto(FILE *inp);
Texto psTexto(const char *str);
IdentifierLabel  pIdentifierLabel(FILE *inp);
IdentifierLabel psIdentifierLabel(const char *str);
TypeType  pTypeType1(FILE *inp);
TypeType psTypeType1(const char *str);
TypeType  pTypeType2(FILE *inp);
TypeType psTypeType2(const char *str);
TypeType  pTypeType3(FILE *inp);
TypeType psTypeType3(const char *str);
Letra  pLetra(FILE *inp);
Letra psLetra(const char *str);
Digito  pDigito(FILE *inp);
Digito psDigito(const char *str);
Caractere  pCaractere(FILE *inp);
Caractere psCaractere(const char *str);

#endif
